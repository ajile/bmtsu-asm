; Константы
section .data
  A:       db     -30           ; Операнд 1
  B:       db     21            ; Операнд 2


; Раздел неинициализированных переменных
section .bss
  X:    resb   1             ; Резервируем 1 байт, под результат выполнения программы

; Начало секции кода
section .text
  global start
  start:
      mov    eax, A       ; Помещаем значение A в регистр eax
      add    eax, 5       ; Добавляем к значению регистра eax значение 5
      sub    eax, B       ; Вычитаем из значения регистра eax значение B
      mov    [X], al      ; Сохраняем результат по адресу X. Нас интересует
                          ; только low часть регистра aex, поэтому используем
                          ; регистр al.

      ; Выход из программы, без ошибок

      mov    eax, 1       ; системный вызов № 1 — sys_exit
      xor    ebx, ebx     ; выход с кодом 0
      int    0x80         ; вызов ядра
